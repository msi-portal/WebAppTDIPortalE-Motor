@model WebAppTDIPortalE_Motor.Models.COAddViewModel

@{
    ViewBag.menu = "CO";
    ViewBag.submenu = "CO_Add";
    ViewBag.Title = "Create Customer Order";
}
<style type="text/css">
    /*.ui-autocomplete, .ui-menu, .ui-menu-item {
        z-index: 1006;
    }*/
</style>

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">@ViewBag.Title</h6>
    </div>
    <div class="card-body">
        @using (Html.BeginForm("SaveCO", "CO", FormMethod.Post, new { @class = "user", @id = "frm-co" }))
        {
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(m => m.cust_num, new { @Value = Model.cust_num })
            @Html.HiddenFor(m => m.whse, new { @Value = Model.whse })
            @Html.Hidden("sparepart_val", 0)
            @Html.Hidden("order_date_val", DateTime.Today.ToString("MM/dd/yyyy"))
            <div class="row">
                <div class="col-2">
                    CO No. :
                </div>
                <div class="col-4">
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.co_num, new { @Value = "", @placeholder = "CO Number", @class = "form-control form-control-user", @style = "padding: 0.2rem 1rem;", @disabled = "disabled" })
                    </div>
                </div>
                <div class="col-2">
                    Order Date : (MM/DD/YYYY)
                </div>
                <div class="col-4">
                    <div class="form-group">
                        @*@Html.TextBoxFor(m => m.order_date, new { @Value = Model.order_date, @placeholder = "Date", @class = "datepickers form-control form-control-user", @style = "padding: 0.2rem 1rem;" })*@
                        <input type="text" class="form-control datepickers form-control-user" value="@Model.order_date.ToString("MM/dd/yyyy")" id="order_date" name="order_date" style = "padding: 0.2rem 1rem;">

                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-2">
                    Customer :
                </div>
                <div class="col-4">
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.cust_num, new { @Value = Model.cust_num, @placeholder = "Customer Number", @class = "form-control form-control-user", @style = "padding: 0.2rem 1rem;", @disabled = "disabled" })
                        @Html.TextBoxFor(m => m.cust_name, new { @Value = Model.cust_name, @class = "form-control form-control-user", @style = "padding: 0.2rem 1rem;", @disabled = "disabled" })
                    </div>
                </div>
                <div class="col-2">
                    Warehouse :
                </div>
                <div class="col-4">
                    <div class="form-group">
                        <input type="text" class="form-control form-control-user" value="@Model.whse" id="whse_1" name="whse_1" style="padding: 0.2rem 1rem;" >
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-2">
                    Ship To :
                </div>
                <div class="col-4">
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.cust_seq, new { @Value = Model.cust_seq, @placeholder = "Ship To", @class = "form-control form-control-user", @style = "padding: 0.2rem 1rem;" })
                        @Html.TextBoxFor(m => m.ship_name, new { @Value = Model.ship_name, @placeholder = "Ship Name", @class = "form-control form-control-user", @style = "padding: 0.2rem 1rem;", @disabled = "disabled" })
                    </div>
                </div>
                <div class="col-2">
                    Cust PO :
                </div>
                <div class="col-4">
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.cust_po, new { @Value = Model.cust_po, @placeholder = "Customer PO", @class = "form-control form-control-user", @style = "padding: 0.2rem 1rem;" })
                        <div class="custom-control custom-checkbox small">
                            @Html.CheckBoxFor(m => m.sparepart, new { @Value = Model.sparepart })
                            <label for="sparepart-label">
                                Sparepart
                            </label>
                        </div>
                        @*<div class="custom-control custom-checkbox small">
                            <input type="checkbox" class="custom-control-input" id="sparepart" name="sparepart" value="@Model.sparepart">
                            <label class="custom-control-label" for="sparepart-label">
                                Sparepart
                            </label>
                        </div>*@
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-5">
                    &nbsp;
                </div>
                <div class="col-2" style="text-align:center;">
                    <button type="button" class="btn btn-primary btn-user btn-block" id="btnAddLine" data-toggle="modal" data-target="#coItemModal">Add Line</button>
                </div>
                <div class="col-5">
                    &nbsp;
                </div>
            </div>
            <div class="row">
                <div class="col-12">
                    <table id="coitemData" class="display" cellspacing="0" style="width :100%">
                        <thead>
                            <tr>
                                <th>Line</th>
                                <th>Item Code</th>
                                <th>Description</th>
                                <th>Qty</th>
                                <th>UM</th>
                                <th>Price</th>
                                <th>Net Price</th>
                                <th>Due Date</th>
                                <th></th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
            <div class="row">
                <div class="col-5">
                    &nbsp;
                </div>
                <div class="col-2" style="text-align:center;">
                    <input type="submit" value="Save CO" class="btn btn-primary btn-user btn-block" />
                </div>
                <div class="col-5">
                    &nbsp;
                </div>
            </div>
        }
    </div>
</div>

<div class="modal fade" id="coItemModal" tabindex="-1" aria-labelledby="coItemModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <form class="form-horizontal" method="POST" id="editForm" role="form">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="coItemModalLabel">New CO Item</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-12">
                            <div class="form-group">
                                <label for="model" class="col-form-label">Model:</label>
                                <input type="text" class="form-control" id="model" name="model">
                            </div>
                        </div>
                        @*<div class="col-6">
                    <div class="form-group">
                        <label for="spec" class="col-form-label">Spec:</label>
                        <input type="text" class="form-control" id="spec" name="spec">
                    </div>

                </div>*@
                    </div>

                    <div class="row">
                        <div class="col-6">
                            <div class="form-group">
                                <label for="item" class="col-form-label">Item:</label>
                                <input type="text" class="form-control" id="item" name="item">
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="form-group">
                                <label for="description" class="col-form-label">Description:</label>
                                <input type="text" class="form-control" id="description" name="description" disabled="disabled">
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6">
                            <div class="form-group">
                                <label for="um" class="col-form-label">UM:</label>
                                <input type="text" class="form-control" id="um" name="um" disabled="disabled">
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="form-group">
                                <label for="qty" class="col-form-label">Qty:</label>
                                <input type="number" class="form-control" id="qty" name="qty" onchange="calcNetPrice()">
                                <input type="hidden" class="form-control" id="qty_alloc" name="qty_alloc">
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6">
                            <div class="form-group">
                                <label for="price" class="col-form-label">Price:</label>
                                <input type="text" class="form-control" id="price" name="price" disabled="disabled">
                                <input type="hidden" class="form-control" id="unit_cost" name="unit_cost">
                                <input type="hidden" class="form-control" id="matl_cost" name="matl_cost">
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="form-group">
                                <label for="net_price" class="col-form-label">Net Price:</label>
                                <input type="number" class="form-control" id="net_price" name="net_price" disabled="disabled">
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6">
                            <div class="form-group">
                                <label for="due_date" class="col-form-label">Due Date:</label>
                                <input type="text" class="form-control datepickers" value="@Model.order_date.ToString("MM/dd/yyyy")" id="due_date" name="due_date" disabled="disabled">
                            </div>
                        </div>
                        <div class="col-6">
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary co-item-close" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts{
    <script src="~/Theme/vendor/datatables/jquery.dataTables.min.js"></script>
    <script src="~/Theme/vendor/datatables/dataTables.bootstrap4.min.js"></script>

    <script src="~/Theme/vendor/jquery/jquery-ui.js"></script>

    <script type="text/javascript">
    function calcNetPrice() {
        $('#net_price').val($('#price').val() * $('#qty').val());
    }
        
    function bindDatatable() {
        datatable = $('#coitemData')
            .DataTable({
            "sAjaxSource": '@Url.Action("GetDataCoItem", "CO")',
            "bServerSide": true,
            "bProcessing": true,
            "bSearchable": true,
            "language": {
                    "emptyTable": "No record found.",
                "processing":
                    '<i class="fa fa-spinner fa-spin fa-3x fa-fw" style="color:#2a2b2b;"></i><span class="sr-only">Loading...</span> '
            },
            "columns": [
                {
                    "data": "co_line",
                    "autoWidth": true,
                    "searchable": true
                },
                {
                    "data": "item",
                    "autoWidth": true,
                    "searchable": true
                },
                {
                    "data": "description",
                    "autoWidth": true,
                    "searchable": true
                }, {
                    "data": "qty_ordered",
                    "autoWidth": true,
                    "searchable": true
                }, {
                    "data": "u_m",
                    "autoWidth": true,
                    "searchable": true
                }, {
                    "data": "price",
                    "autoWidth": true,
                    "searchable": true
                }, {
                    "data": "net_price",
                    "autoWidth": true,
                    "searchable": true
                }, {
                    "data": "due_date",
                    "autoWidth": true,
                    "searchable": true,
                    "render": function (value) {
                            if (value === null) return "";

                            var pattern = /Date\(([^)]+)\)/;
                            var results = pattern.exec(value);
                            var dt = new Date(parseFloat(results[1]));

                            return (dt.getMonth() + 1) + "/" + dt.getDate() + "/" + dt.getFullYear();
                        },
                },
                {
                    data: "co_line", render: function (data, type, row) {
                        return '<a href="#" class="btn btn-warning btn-user btn-block" onclick="deleteItem(' + row.co_line + ')">Delete</a>';
                    }
                },

            ],

        });
    }

    function deleteItem(id) {
        let text = "Are you sure you want to delete this object?";
        var dataForm = 'id=' + id;
        if (confirm(text) == true) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("DeleteCOItem", "CO")',
                data: dataForm,
                success: function (data) {
                    if (data.Success) {
                        if (data.Counter > 0) {
                            $("#item").prop("disabled", true);
                            $("#sparepart").prop("disabled", true);
                            $("#order_date").prop("disabled", true);
                        } else {
                            $("#item").prop("disabled", false);
                            $("#sparepart").prop("disabled", false);
                            $("#order_date").prop("disabled", false);
                        }
                        datatable.ajax.reload();
                    }
                }
            });
        }
    }

    $(document).ready(function () {
        $('#model').autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("ModelAutoCompleteAll", "CO")',
                    type: "POST",
                    dataType: "json",
                    data: { prefix: $("#model").val(), sparepart: $("#sparepart").is(":checked"), cust_num: $("#cust_num").val(), order_date: $("#order_date").val() },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.Text, value: item.Value }
                        }))
                    }
                })
            },
            appendTo: "#coItemModal",
            select: function (event, ui) {
                if (ui.item) {
                    $('#model').val(ui.item.value);
                    $.ajax({
                        url: '@Url.Action("COFindItem", "CO")',
                        type: "POST",
                        dataType: "json",
                        data: { model: $("#model").val(), sparepart: $("#sparepart").is(":checked"), order_date: $("#order_date").val() },
                        success: function (data) {
                            var jsonStringify = JSON.stringify(data);
                            var response = JSON.parse(jsonStringify);
                            $('#item').val(response[0].item);
                            $('#description').val(response[0].description);
                            $('#um').val(response[0].u_m);
                            $('#price').val(response[0].unit_price);
                            $('#qty_alloc').val(response[0].qty);
                            $('#unit_cost').val(response[0].unit_cost);
                            $('#matl_cost').val(response[0].matl_cost);
                        }
                    });
                }
            },
            minLength: 0,
            change: function (event, ui) {
                if (ui.item) {
                    $('#model').val(ui.item.value);
                    $.ajax({
                        url: '@Url.Action("COFindItem", "CO")',
                        type: "POST",
                        dataType: "json",
                        data: { model: $("#model").val(), sparepart: $("#sparepart").is(":checked"), order_date: $("#order_date").val()  },
                        success: function (data) {
                            var jsonStringify = JSON.stringify(data);
                            var response = JSON.parse(jsonStringify);
                            $('#item').val(response[0].item);
                            $('#description').val(response[0].description);
                            $('#um').val(response[0].u_m);
                            $('#price').val(response[0].unit_price);
                            $('#qty_alloc').val(response[0].qty);
                            $('#unit_cost').val(response[0].unit_cost);
                            $('#matl_cost').val(response[0].matl_cost);
                        }
                    });
                }

            },
        }).focus(function () {
            $(this).autocomplete('search', $(this).val())
        });

        $('#spec').autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("SpecAutoCompleteAll", "CO")',
                    type: "POST",
                    dataType: "json",
                    data: { prefix: $("#spec").val(), model: $("#model").val(), sparepart: $("#sparepart").is(":checked") },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.Text, value: item.Value }
                        }))
                    }
                })
            },
            appendTo: "#coItemModal",
            select: function (event, ui) {
                if (ui.item) {
                    $('#spec').val(ui.item.value);
                    $.ajax({
                        url: '@Url.Action("COFindItem", "CO")',
                        type: "POST",
                        dataType: "json",
                        data: { spec: $("#spec").val(), model: $("#model").val(), sparepart: $("#sparepart").is(":checked"), cust_num: $("#cust_num").val() },
                        success: function (data) {
                            var jsonStringify = JSON.stringify(data);
                            var response = JSON.parse(jsonStringify);
                            $('#item').val(response[0].item);
                            $('#description').val(response[0].description);
                            $('#um').val(response[0].u_m);
                            $('#price').val(response[0].unit_price);
                            $('#unit_cost').val(response[0].unit_cost);
                            $('#matl_cost').val(response[0].matl_cost);
                        }
                    });
                }
            },
            minLength: 0,
            change: function (event, ui) {
                if (ui.item) {
                    $('#spec').val(ui.item.value);
                    $.ajax({
                        url: '@Url.Action("COFindItem", "CO")',
                        type: "POST",
                        dataType: "json",
                        data: { spec: $("#spec").val(), model: $("#model").val(), sparepart: $("#sparepart").is(":checked"), cust_num: $("#cust_num").val() },
                        success: function (data) {
                            var jsonStringify = JSON.stringify(data);
                            var response = JSON.parse(jsonStringify);
                            $('#item').val(response[0].item);
                            $('#description').val(response[0].description);
                            $('#um').val(response[0].u_m);
                            $('#price').val(response[0].unit_price);
                            $('#unit_cost').val(response[0].unit_cost);
                            $('#matl_cost').val(response[0].matl_cost);
                        }
                    });
                }
            },
        }).focus(function () {
            $(this).autocomplete('search', $(this).val())
        });

        $("#item").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("ItemAutoCompleteAll", "CO")',
                    type: "POST",
                    dataType: "json",
                    data: { prefix: $("#item").val(), model: $("#model").val(), sparepart: $("#sparepart").is(":checked"), cust_num: $("#cust_num").val(), order_date: $("#order_date").val() },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.Text, value: item.Value }
                        }))
                    }
                })
            },
            appendTo: "#coItemModal",
            messages: {
                noResults: "", results: function () { }
            },
            select: function (event, ui) {
                if (ui.item) {
                    $('#item').val(ui.item.value);
                    $('#description').val(ui.item.label)
                    $.ajax({
                        url: '@Url.Action("COFindItem", "CO")',
                        type: "POST",
                        dataType: "json",
                        data: { model: $("#item").val(), sparepart: $("#sparepart").is(":checked"), order_date: $("#order_date").val(), cust_num: $("#cust_num").val(), model_vendor: $("#model").val() },
                        success: function (data) {
                            var jsonStringify = JSON.stringify(data);
                            var response = JSON.parse(jsonStringify);
                            $('#item').val(response[0].item);
                            $('#description').val(response[0].description);
                            $('#qty_alloc').val(response[0].qty);
                            $('#um').val(response[0].u_m);
                            $('#price').val(response[0].unit_price);
                            $('#unit_cost').val(response[0].unit_cost);
                            $('#matl_cost').val(response[0].matl_cost);
                        }
                    });
                }
            },
            minLength: 0,
            change: function (event, ui) {
                if (ui.item) {
                    $('#item').val(ui.item.value);
                    $('#description').val(ui.item.label)
                    $.ajax({
                        url: '@Url.Action("COFindItem", "CO")',
                        type: "POST",
                        dataType: "json",
                        data: { model: $("#item").val(), sparepart: $("#sparepart").is(":checked"), order_date: $("#order_date").val(), cust_num: $("#cust_num").val(), model_vendor: $("#model").val() },
                        success: function (data) {
                            var jsonStringify = JSON.stringify(data);
                            var response = JSON.parse(jsonStringify);
                            $('#item').val(response[0].item);
                            $('#description').val(response[0].description);
                            $('#qty_alloc').val(response[0].qty);
                            $('#um').val(response[0].u_m);
                            $('#price').val(response[0].unit_price);
                            $('#unit_cost').val(response[0].unit_cost);
                            $('#matl_cost').val(response[0].matl_cost);
                        }
                    });
                }
            }
        }).focus(function () {
            $(this).autocomplete("search", "");
        });

        $("#cust_seq").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("GetCustAddr", "CO")',
                    type: "POST",
                    dataType: "json",
                    data: { prefix: $("#cust_seq").val() },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.Text, value: item.Value }
                        }))
                    }
                })
            },
            messages: {
                noResults: "", results: function () { }
            },
            select: function (event, ui) {
                if (ui.item) {
                    $('#cust_seq').val(ui.item.value);
                    $('#ship_name').val(ui.item.label)
                }
            },
            minLength: 0,
            change: function (event, ui) {
                //alert('change event called');
                if (ui.item) {
                    $('#cust_seq').val(ui.item.value);
                    $('#ship_name').val(ui.item.label)
                }
            }
        }).focus(function () {
            $(this).autocomplete("search", "");
        });


        $('.datepickers').datepicker({
            dateFormat: 'mm/dd/yy',
            onSelect: function (dateText) {
                if (this.id == 'order_date') {
                    var order_date = $('#order_date').val();
                    $('#order_date_val').val(order_date);
                }
            }
        });
        bindDatatable();

        $("#editForm").submit(function (e) {
            e.preventDefault();
            var item = $("#item ").val();
            var description = $("#description").val();
            var um = $("#um").val();
            var price = $("#price").val();
            var qty = $("#qty").val();
            var qty_alloc = $("#qty_alloc").val();
            var unit_cost = $("#unit_cost").val();
            var matl_cost = $("#matl_cost").val();
            
            var net_price = $("#price").val() * $("#qty").val();
            var due_date = $("#due_date").val();
            if (parseFloat(qty) > parseFloat(qty_alloc)) {
                alert("Qty must less than or equal to " + qty_alloc)
                return;
            }
            var dataForm = 'item=' + item + '&description=' + description + '&um=' + um + '&price=' + price + '&qty=' + qty + '&net_price=' + net_price + '&due_date=' + due_date + '&unit_cost=' + unit_cost + '&matl_cost=' + matl_cost;

            $.ajax({
                type: 'POST',
                url: '@Url.Action("SaveCOItem", "CO")',
                data: dataForm,
                success: function (data) {
                    if (data.Success) {
                        //if ($("#sparepart").is(":checked")) {
                        //    $("#sparepart").prop("disabled", true);
                        //}
                        if (data.Counter > 0) {
                            $("#item").prop("disabled", true);
                            $("#sparepart").prop("disabled", true);
                            $("#order_date").prop("disabled", true);
                        } else {
                            $("#item").prop("disabled", false);
                            $("#sparepart").prop("disabled", false);
                            $("#order_date").prop("disabled", false);
                        }
                        datatable.ajax.reload();
                        $('#coItemModal').modal('hide');
                    } else {
                        if (data.Counter = 9999) {
                            alert("Duplicate Item..!!")
                        }
                    }
                }
            });

        });

        $('#coItemModal').on('hidden.bs.modal', function () {
            $(this).find('form').trigger('reset');
        })

        $('.co-item-close').on('click', function () {
            $('#coItemModal').modal('hide');
            $(this).find('form').trigger('reset');
        })

        @*$('.co-delete-item').on('click', function () {
            const id = $(this).data('id');
            var dataForm = 'id=' + id;
            var confirmText = "Are you sure you want to delete this object?";
            confirm(confirmText);
            if (confirm(confirmText)) {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("DeleteCOItem", "CO")',
                    data: dataForm,
                    success: function (data) {
                        if (data.Success) {
                            datatable.ajax.reload();
                            $('#deleteCOModal').modal('hide');
                        }
                    }
                });
            }
            return false;
        })*@

        $('#btnAddLine').click(function () {
            if ($("#sparepart").is(":checked")) {
                $("#item").prop("disabled", true);
            } else {
                $("#item").prop("disabled", false);
            }
        });

        $('#sparepart').click(function () {
            if ($(this).is(':checked')) {
                $('#sparepart_val').val(1);
            } else {
                $('#sparepart_val').val(0);
            }
            $.ajax({
                url: '@Url.Action("COCheckWH", "CO")',
                type: "POST",
                dataType: "json",
                data: { sparepart: $("#sparepart").is(":checked") },
                success: function (data) {
                    var jsonStringify = JSON.stringify(data);
                    var response = JSON.parse(jsonStringify);
                    $('#whse').val(response[0].whse);
                    $('#whse_1').val(response[0].whse);
                }
            });
        });
    });
    </script>
}
