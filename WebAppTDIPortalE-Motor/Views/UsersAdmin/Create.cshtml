@model WebAppTDIPortalE_Motor.Models.RegisterViewModel
@{
    ViewBag.menu = "Manage";
    ViewBag.submenu = "ManageUser";
    ViewBag.Title = "Create User";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Create", "UsersAdmin", FormMethod.Post, new { @class = "user", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary("", new { @class = "text-error" })
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @Value = "", @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.CustomerCode, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.CustomerCode, new { @class = "form-control", @id = "tags" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Warehouse, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Warehouse, new { @class = "form-control", @id = "tagswhse" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @Value = "", @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <label class="col-md-2 control-label">
            Select User Role
        </label>
        <div class="col-md-10">
            @foreach (var item in (SelectList)ViewBag.RoleId)
            {
                <input type="checkbox" name="SelectedRoles" value="@item.Value" class="checkbox-inline" />
                @Html.Label(item.Value, new { @class = "control-label" })
            }
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-primary btn-user" value="Create" style="padding: 0.2rem 1rem;" />
        </div>
    </div>
}

@section Scripts{
    <script src="~/Theme/vendor/jquery/jquery-ui.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            $("#tags").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '@Url.Action("AutoComplete","Account")',
                        type: "POST",
                        dataType: "json",
                        data: { prefix: $("#tags").val() },
                        success: function (data) {
                            console.log("data" + JSON.stringify(data));
                            response($.map(data, function (item) {
                                return { label: item.Text }
                            }))
                        }
                    })
                },
                minLength: 0,
                messages: {
                    noResults: "", results: function () { }
                }
            }).focus(function () {
                $(this).autocomplete("search", "");
            });

            $("#tagswhse").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '@Url.Action("AutoCompleteWHSE","Account")',
                        type: "POST",
                        dataType: "json",
                        data: { prefix: $("#tagswhse").val() },
                        success: function (data) {
                            console.log("data" + JSON.stringify(data));
                            response($.map(data, function (item) {
                                return { label: item.Text }
                            }))
                        }
                    })
                },
                minLength: 0,
                messages: {
                    noResults: "", results: function () { }
                }
            }).focus(function () {
                $(this).autocomplete("search", "");
            });
            
        });
    </script>
}